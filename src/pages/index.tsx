import NoteList, { Note } from "@/components/noteList/NoteList";
import Head from "next/head";
import React from "react";
import { getSession } from "next-auth/react";
import Nav from "@/components/Nav/Nav";
import { GetServerSideProps } from "next/types";
import { Session } from "next-auth";
import NoteDetails from "@/components/NoteDetails/NoteDetails";

interface Props {
  session: Session | null;
  notes: Note[];
}

export default function Home({ session, notes }: Props) {
  const [editMode, setEditMode] = React.useState<boolean>(false);
  const [showTrashcan, setShowTrashcan] = React.useState<boolean>(false);

  return (
    <>
      <Head>
        <title>Squink | Notes</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-white dark:bg-black min-h-screen">
        {editMode && <NoteDetails />}
        {!editMode && (
          <NoteList
            notes={notes}
            showTrashcan={showTrashcan}
            setShowTrashcan={setShowTrashcan}
          />
        )}
        <Nav showTrashcan={showTrashcan} setShowTrashcan={setShowTrashcan} />
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: "/signin",
        permanent: false,
      },
    };
  }

  //traer notas
  const data = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/notes`, {
    headers: {
      Authorization: `${session.user.token}`,
    },
  });

  const notes = await data.json();

  return {
    props: {
      session,
      notes,
    },
  };
};
